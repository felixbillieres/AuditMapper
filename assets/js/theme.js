// Gestion du th√®me (clair/sombre)
document.addEventListener('DOMContentLoaded', function() {
    const toggleThemeBtn = document.getElementById('toggleTheme');
    const body = document.body;
    
    // V√©rifier si une pr√©f√©rence est d√©j√† stock√©e
    const currentTheme = localStorage.getItem('theme');
    
    // Appliquer le th√®me sauvegard√© ou d√©tecter la pr√©f√©rence du syst√®me
    if (currentTheme) {
        body.classList.add(currentTheme);
        updateThemeIcon(currentTheme === 'dark-theme');
    } else {
        // D√©tecter la pr√©f√©rence du syst√®me
        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            body.classList.add('dark-theme');
            updateThemeIcon(true);
        }
    }
    
    // Gestionnaire de clic pour basculer le th√®me
    if (toggleThemeBtn) {
        toggleThemeBtn.addEventListener('click', function() {
            const isDarkTheme = body.classList.toggle('dark-theme');
            
            // Sauvegarder la pr√©f√©rence
            localStorage.setItem('theme', isDarkTheme ? 'dark-theme' : '');
            
            // Mettre √† jour l'ic√¥ne
            updateThemeIcon(isDarkTheme);
        });
    }
    
    // Fonction pour mettre √† jour l'ic√¥ne du bouton
    function updateThemeIcon(isDarkTheme) {
        const iconElement = toggleThemeBtn ? toggleThemeBtn.querySelector('.icon-theme') : null;
        if (iconElement) {
            iconElement.textContent = isDarkTheme ? '‚òÄÔ∏è' : 'üåô';
        }
    }
}); 